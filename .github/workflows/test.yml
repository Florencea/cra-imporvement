name: CI
on:
  push:
    branches: ["main"]
  workflow_dispatch:
permissions:
  contents: read
  actions: read
  checks: write
env:
  NODE_VERSION: lts/*
  NPM_VERSION: latest
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20, 21]
    name: Tests on Node v${{ matrix.node }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup jq
        uses: dcarbone/install-jq-action@v2.1.0
      - name: Get Prefer Node.js version
        run: echo "NODE_VERSION=$(curl -fsSL https://nodejs.org/download/release/index.json | jq -cr --arg NODE_V v${{ matrix.node }} 'last( sort_by( .version | split("v") | .[1] | split(".") | map(tonumber) ) | .[] | select( .version | startswith($NODE_V) ) | .version )')" >> $GITHUB_ENV
      - name: Setup node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Get Prefer npm version
        run: echo "NPM_VERSION=$(npm view npm@${{ env.NPM_VERSION }} version)" >> $GITHUB_ENV
      - name: Setup npm ${{ env.NPM_VERSION }}
        run: npm install --audit false --fund false --loglevel error --progress false --global true npm@${{ env.NPM_VERSION }}
      - name: Install dependencies
        run: npm ci --loglevel error --audit false --fund false
      - name: Try format
        run: npm run format
      - name: Try lint
        run: npm run lint
      - name: Try build
        run: npm run build
      - name: Run tests
        run: CI=true npm test -- --reporters=default --reporters=jest-junit
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: JEST Tests
          path: reports/jest-*.xml
          reporter: jest-junit
